<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.lili.shard.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="org.lili.shard.bean.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="country_code" property="countryCode" jdbcType="VARCHAR"/>
        <result column="mobile_number" property="mobileNumber" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="login_pword" property="loginPword" jdbcType="VARCHAR"/>
        <result column="ctime" property="ctime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, country_code, mobile_number, email, login_pword, ctime
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.lili.shard.bean.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user_
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0">
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user_
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="org.lili.shard.bean.UserExample">
        delete from user_
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.lili.shard.bean.User" useGeneratedKeys="true" keyProperty="id">
    insert into user_ (id, country_code, mobile_number,
    email, login_pword, ctime
    )
    values (#{id,jdbcType=BIGINT}, #{countryCode,jdbcType=VARCHAR}, #{mobileNumber,jdbcType=VARCHAR},
    #{email,jdbcType=VARCHAR}, #{loginPword,jdbcType=VARCHAR}, #{ctime,jdbcType=TIMESTAMP}
    )
  </insert>
    <insert id="insertSelective" parameterType="org.lili.shard.bean.User" useGeneratedKeys="true" keyProperty="id">
        insert into user_
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="countryCode != null">
                country_code,
            </if>
            <if test="mobileNumber != null">
                mobile_number,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="loginPword != null">
                login_pword,
            </if>
            <if test="ctime != null">
                ctime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="countryCode != null">
                #{countryCode,jdbcType=VARCHAR},
            </if>
            <if test="mobileNumber != null">
                #{mobileNumber,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="loginPword != null">
                #{loginPword,jdbcType=VARCHAR},
            </if>
            <if test="ctime != null">
                #{ctime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.lili.shard.bean.UserExample" resultType="java.lang.Integer">
        select count(*) from user_
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.countryCode != null">
                country_code = #{record.countryCode,jdbcType=VARCHAR},
            </if>
            <if test="record.mobileNumber != null">
                mobile_number = #{record.mobileNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.loginPword != null">
                login_pword = #{record.loginPword,jdbcType=VARCHAR},
            </if>
            <if test="record.ctime != null">
                ctime = #{record.ctime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_
        set id = #{record.id,jdbcType=BIGINT},
        country_code = #{record.countryCode,jdbcType=VARCHAR},
        mobile_number = #{record.mobileNumber,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        login_pword = #{record.loginPword,jdbcType=VARCHAR},
        ctime = #{record.ctime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.lili.shard.bean.User">
        update user_
        <set>
            <if test="countryCode != null">
                country_code = #{countryCode,jdbcType=VARCHAR},
            </if>
            <if test="mobileNumber != null">
                mobile_number = #{mobileNumber,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="loginPword != null">
                login_pword = #{loginPword,jdbcType=VARCHAR},
            </if>
            <if test="ctime != null">
                ctime = #{ctime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.lili.shard.bean.User">
    update user_
    set country_code = #{countryCode,jdbcType=VARCHAR},
      mobile_number = #{mobileNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      login_pword = #{loginPword,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>